{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","productTopRated","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","listUsers","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","kayword","ProductScreen","qty","setQty","setRating","comment","setComment","console","log","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b2b379d4.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  productTopRated: productTopRatedReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products: []}, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  //params are: initial state & action to dispatch\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    }else{\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    // this for let the user in right away\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    // dispatch({\r\n    //   type: USER_LOGIN_SUCCESS,\r\n    //   payload: data,\r\n    // })\r\n\r\n    // localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    // localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    })\r\n\r\n    // localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    // localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Proshop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({history}) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign in\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">\r\n            Copyright &copy Proshop\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({value, text, color}) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n        <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n        <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n        <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n        <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825'\r\n}\r\n\r\nRating.propTypes = {\r\n  // value: PropTypes.number.isRequired,\r\n  // text: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({product}) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>      \r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n  return (\r\n    <Alert variant={variant}>\r\n      {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block'}}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      // payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To Proshop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electronics'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList) // this is from store.js\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            kayword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  //props.match\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  console.log(match, history)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted!')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, { rating, comment }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n        <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  ></Rating>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: ${product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excelent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>Proceed to checkout</Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin // this is defined in userReducer\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // DISPATCH LOGIN\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Costumer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister // this is defined in userReducer\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // DISPATCH REGISTER\r\n    if(password !== confirmPassword){\r\n      setMessage('Passwords do not match')\r\n    }else{\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails // this is defined in userReducer\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin // this is defined in userReducer\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy // this is defined in userReducer\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile // this is defined in userReducer\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile')) // to hit /profile route, (getUserDetails(id))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      //DISPATCH USER PROFILE\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2/>\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Postal Code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Postal Code'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3/>\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  // calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    // calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n\r\n      script.onload = () => setSdkReady(true)\r\n\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || order._id !== orderId || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, order, successPay, successDeliver, history, userInfo])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n    dispatch(listUsers())\r\n  }, [dispatch, history, userInfo, successDelete])\r\n\r\n  const deleteHandler = (id) => {\r\n    if(window.confirm('Are you sure?')){\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails // this is defined in userReducer\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate // this is defined in userReducer\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(updateUser({_id: userId, name, email, isAdmin}))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Prodcuts</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i>Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState(0)\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails // this is defined in userReducer\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate // this is defined in userReducer\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    \r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter Count In Stock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <LinkContainer to={`/order/${order._id}`}>\r\n                  <Button variant='light' className='btn-sm'>Details</Button>\r\n                </LinkContainer>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}